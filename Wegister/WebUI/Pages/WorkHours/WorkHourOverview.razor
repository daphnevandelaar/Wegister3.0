@page "/uren"

@using WebUI.Services
@using WebUI.Models
@inject WorkHourService WorkHourService
@inject NavigationManager UriHelper

<h1>Urenoverzicht</h1>

<p>Het onderstaande overzicht is een lijst met de geregistreerde uren</p>

<button class="btn btn-primary" @onclick=@Navigate>Uren registreren</button>

Totaalgewerkt: @uren.TotalAmountOfWorkHoursInMinutes
@if (uren == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Klant</th>
                <th>Datum</th>
                <th>Starttijd</th>
                <th>Eindtijd</th>
                <th>Pauze in min.</th>
                <th>Totaal</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var gewerktuur in uren.WorkHours)
        {
            {
                dataTarget = dataTarget + gewerktuur.Id;
            }
            <tr data-toggle="collapse" data-target="#@dataTarget" aria-expanded="false" aria-controls="collapseExample" style="cursor: pointer;">
                <td>@gewerktuur.CustomerName</td>
                <td>@gewerktuur.Date</td>
                <td>@gewerktuur.StartTime</td>
                <td>@gewerktuur.EndTime</td>
                <td>@gewerktuur.RecreationInMinutes</td>
                <td>@gewerktuur.TotalWorkHoursInMinutes</td>
            </tr>
            <tr class="collapse" id="@dataTarget" style="background-color: rgb(255, 255, 255);">
                <td colspan="6">
                    @gewerktuur.Id
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WorkHourListVm uren;
    private string dataTarget = "toggle";

    protected override async Task OnInitializedAsync()
    {
        uren = WorkHourService.GetHours();
    }

    void Navigate()
    {
        UriHelper.NavigateTo("uren/toevoegen");
    }
}